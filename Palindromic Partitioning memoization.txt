#include<bits/stdc++.h>
using namespace std;
int static dp[1001][1001];
bool ispalindrome(string s, int i, int j)
{
    if(i==j)
        return true;
    if(i>j)
        return true;
    while (j > i) 
    { 
        if (s[i++] != s[j--]) 
        { 
            return false;
            i++;
            j--;
        } 
    } 
    return true;
}
int solve(string s, int i, int j)
{
    if(i>=j)
        return 0;
    if(ispalindrome(s,i,j)==true)
        return 0;
    if(dp[i][j]!=-1)
        return dp[i][j];
    int mn=INT_MAX;
    for(int k=i ; k<=j-1 ; k++)
    {
        int tempans=solve(s,i,k)+solve(s,k+1,j)+1;
        if(tempans<mn)
            mn=tempans;
    }
    return dp[i][j]=mn;;
}
int main()
{
    int n;
    memset(dp,-1,sizeof(dp));
    string s;
    cout<<"Enter the string : ";
    cin>>s;
    n=s.length();
    cout<<"Palindrome partitioning is :"<<solve(s,0,n-1);
    return 0;
}