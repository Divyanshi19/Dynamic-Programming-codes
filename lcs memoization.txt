#include<iostream>
#include<cstring>
using namespace std;
int dp[1001][1001];
int lcs(string x, string y, int n, int m)
{
    if(n==0 || m==0)
        return 0;
    if(dp[n][m]!=-1)
        return dp[n][m];
    if(x[n-1]==y[n-1])
        return dp[n][m]= 1+lcs(x,y,n-1,m-1);
    else
        return dp[n][m]= max(lcs(x,y,n-1,m),lcs(x,y,n,m-1));
}
int main()
{
    string x,y;
    cout<<"Enter the 1st string : ";
    cin>>x;
    cout<<"Enter the 2nd string : ";
    cin>>y;
    int n,m;
    n=x.length();
    m=y.length();
    memset(dp,-1,sizeof(dp));
    cout<<"Longest common subsequence is : "<<lcs(x,y,n,m)<<endl;
    return 0;
}